# -*- coding: utf-8 -*-
import requests
import argparse
import time
import sys
import os
from datetime import datetime

# ============ DARKBOSS1BD - SUBDOMAIN HUNTER ============
# Hacker Style Subdomain Enumeration Tool
# Telegram: https://t.me/darkvaiadmin
# Website: https://serialkey.top/
# All-in-One Script with Built-in Wordlist
# =======================================================

def print_banner():
    os.system('cls' if os.name == 'nt' else 'clear')
    banner = """
\033[91m
    ██████╗  █████╗ ████████╗███████╗     \033[93m██╗  ██╗███████╗██╗     ██╗     
    ██╔══██╗██╔══██╗╚══██╔══╝██╔════╝     \033[93m██║  ██║██╔════╝██║     ██║     
    ██████╔╝███████║   ██║   █████╗       \033[93m███████║█████╗  ██║     ██║     
    ██╔══██╗██╔══██║   ██║   ██╔══╝       \033[93m██╔══██║██╔══╝  ██║     ██║     
    ██║  ██║██║  ██║   ██║   ███████╗     \033[93m██║  ██║███████╗███████╗███████╗
    ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝     \033[93m╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝
                                                                            
\033[97m        ╔════════════════════════════════════════╗
        ║    \033[91m█▀ █▀▀ █▀█ █▀█ █ █▄░█ █▀▀ █░█ █▀█ █▀▀\033[97m    ║
        ║    \033[91m▄█ █▄▄ █▄█ █▀▀ █ █░▀█ █▄█ █▄█ █▀▄ ██▄\033[97m    ║
        ║           \033[93mSubdomain Hunter v1.1\033[97m          ║
        ║           \033[96mBy: DARKBOSS1BD\033[97m               ║
        ║   \033[92mTelegram: @darkvaiadmin\033[97m              ║
        ║   \033[95mWebsite: https://serialkey.top/\033[97m        ║
        ╚════════════════════════════════════════╝
\033[0m
    """
    print(banner)

def slow_print(text, delay=0.02):
    for char in text:
        sys.stdout.write(char)
        sys.stdout.flush()
        time.sleep(delay)
    print()

# ============ EMBEDDED WORDLIST (No external file needed) ============
BUILTIN_WORDLIST = [
    "www", "mail", "ftp", "localhost", "webmail", "smtp", "admin", "secure",
    "test", "dev", "development", "beta", "api", "blog", "shop", "store",
    "vpn", "portal", "cpanel", "webdisk", "whm", "autodiscover", "autoconfig",
    "m", "mobile", "email", "docs", "demo", "dashboard", "backup", "ns1",
    "ns2", "ns3", "ns4", "dns", "mysql", "direct", "control", "server",
    "status", "origin", "cdn", "static", "images", "img", "assets", "files",
    "download", "app", "apps", "staging", "preprod", "uat", "internal",
    "intranet", "gateway", "proxy", "firewall", "log", "logs", "monitor",
    "grafana", "kibana", "elk", "git", "svn", "repo", "repository", "wiki",
    "forum", "chat", "meet", "video", "sso", "oauth", "auth", "login",
    "register", "signup", "billing", "payments", "shop", "checkout", "cart",
    "support", "help", "faq", "cdn", "media", "stream", "live", "radio",
    "music", "cloud", "remote", "owa", "exchange", "calendar", "photos"
]

def scan_subdomains(domain, wordlist):
    print(f"\033[96m[→] Starting scan on: \033[92m{domain}\033[0m")
    print(f"\033[96m[→] Using built-in wordlist with {len(wordlist)} entries...\033[0m")
    time.sleep(1)
    found = []

    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36'
    }

    total = len(wordlist)
    for idx, sub in enumerate(wordlist, 1):
        url = f"https://{sub}.{domain}"
        try:
            response = requests.get(url, headers=headers, timeout=3, allow_redirects=True)
            if response.status_code in [200, 301, 302, 403, 401]:
                status_color = "\033[92m" if response.status_code == 200 else "\033[93m"
                print(f"{status_color}[✓] Found: {url} [Status: {response.status_code}]\033[0m")
                found.append({
                    'subdomain': f"{sub}.{domain}",
                    'status': response.status_code,
                    'url': url
                })
        except requests.ConnectionError:
            pass
        except requests.exceptions.RequestException:
            pass

        # Progress indicator
        if idx % 20 == 0 or idx == total:
            print(f"\033[90m[•] Progress: {idx}/{total} checked...\033[0m", end='\r')

    print("\n")
    return found

def save_results(domain, results):
    filename = f"{domain}_subdomains_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
    with open(filename, 'w') as f:
        f.write(f"# Subdomain Scan Results for: {domain}\n")
        f.write(f"# Generated by: DARKBOSS1BD - Subdomain Hunter\n")
        f.write(f"# Telegram: https://t.me/darkvaiadmin\n")
        f.write(f"# Website: https://serialkey.top/\n")
        f.write(f"# Total Found: {len(results)}\n")
        f.write(f"# Scan Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        for res in results:
            f.write(f"{res['url']} [{res['status']}]\n")
    print(f"\033[93m[✓] Results saved to: {filename}\033[0m")

def main():
    print_banner()
    parser = argparse.ArgumentParser(description="DarkBoss1BD Subdomain Hunter - All-in-One")
    parser.add_argument('-d', '--domain', required=True, help='Target domain (e.g., example.com)')

    args = parser.parse_args()

    slow_print(f"\033[94m[+] DARKBOSS1BD INITIATED SUBDOMAIN SCANNING...\033[0m")
    time.sleep(1)

    results = scan_subdomains(args.domain, BUILTIN_WORDLIST)

    if results:
        print(f"\n\033[92m[✓] Scan Complete! {len(results)} subdomain(s) found.\033[0m")
        save_results(args.domain, results)
    else:
        print(f"\n\033[91m[!] No subdomains found. Try expanding the wordlist.\033[0m")

    print(f"\033[95m[•] Stay Evil, Stay Dark. This is \033[91mDARKBOSS1BD\033[95m.\033[0m")

if __name__ == '__main__':
    main()